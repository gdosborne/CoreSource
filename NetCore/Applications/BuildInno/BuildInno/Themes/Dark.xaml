<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:BuildInno"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="clr-namespace:WPFControls;assembly=WPFControls">

    <sys:Double x:Key="FontSize">14</sys:Double>
    <sys:Double x:Key="TitlebarFontSize">14</sys:Double>
    <sys:Double x:Key="ToggleSize">35</sys:Double>
    <sys:Double x:Key="TitlebarButtonWidth">50</sys:Double>
    <sys:Double x:Key="TreeViewIconSize">18</sys:Double>

    <FontFamily x:Key="AppFontFamily">Claibri</FontFamily>
    <FontFamily x:Key="ConsoleFontFamily">Andale Mono</FontFamily>
    <FontFamily x:Key="IconFontFamily">Segoe Fluent Icons</FontFamily>

    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
    <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>

    <Color x:Key="ActiveCaptionColor">#FF0F0F0F</Color>
    <Color x:Key="ActiveCaptionTextColor">#FFF0F0F0</Color>
    <Color x:Key="WindowColor">#FF443434</Color>
    <Color x:Key="WindowTextColor">#FFFFFFFF</Color>
    <Color x:Key="BorderColor">#FFDDDDDD</Color>
    <Color x:Key="ControlBorderColor">#FFDDDDDD</Color>
    <Color x:Key="HighlightColor">#FF555555</Color>
    <Color x:Key="HighlightTextColor">#FFFFFFFF</Color>
    <Color x:Key="CloseBackgroundColor">#FF443434</Color>
    <Color x:Key="CloseForegroundColor">#FFFFFFFF</Color>
    <Color x:Key="CloseMouseOverForegroundColor">#FFFFFFFF</Color>
    <Color x:Key="CloseMouseOverBackgroundColor">#FFFF0000</Color>
    <Color x:Key="ConsoleBackgroundColor">#FF222222</Color>
    <Color x:Key="ConsoleForegroundColor">#FFCCCCCC</Color>
    <Color x:Key="DataGridAlternatingRowBackgroundColor">#FFE8EFFF</Color>
    <Color x:Key="DataGridHeaderForegroundColor">#FFC5C5C5</Color>
    <Color x:Key="DataGridHeaderBackgroundColor">#FF333333</Color>
    <Color x:Key="ToggleBackgroundColor">#00000000</Color>
    <Color x:Key="ToggleForegroundColor">#FF000000</Color>
    <Color x:Key="ToggleOffBackgroundColor">#33000000</Color>
    <Color x:Key="ToggleOffForegroundColor">#FF252525</Color>
    <Color x:Key="TreeViewBackgroundColor">#FF222222</Color>
    <Color x:Key="TreeViewForegroundColor">#FFFFFFFF</Color>
    <Color x:Key="TreeViewHighlightBackgroundColor">#FF5555FF</Color>
    <Color x:Key="TreeViewHighlightForegroundColor">#FFFFFFFF</Color>
    <Color x:Key="StandardButtonBackgroundColor">#FF444444</Color>
    <Color x:Key="StandardButtonForegroundColor">#FFCCCCCC</Color>
    <Color x:Key="StandardButtonMouseOverBackgroundColor">#FF121212</Color>
    <Color x:Key="StandardButtonMouseOverForegroundColor">#FFDDDDDD</Color>
    <Color x:Key="ComboBoxDropDownBackgroundColor">#FFCCCCCC</Color>
    <Color x:Key="ComboBoxDropDownForegroundColor">#FFFFFFFF</Color>
    <Color x:Key="RadioButtonToggleColor">#FF11FF11</Color>
    <Color x:Key="MenuHighlightColor">#3311FF11</Color>

    <SolidColorBrush x:Key="ActiveCaptionBrush" Color="{DynamicResource ActiveCaptionColor}" />
    <SolidColorBrush x:Key="ActiveCaptionTextBrush" Color="{DynamicResource ActiveCaptionTextColor}" />
    <SolidColorBrush x:Key="WindowBrush" Color="{DynamicResource WindowColor}" />
    <SolidColorBrush x:Key="WindowTextBrush" Color="{DynamicResource WindowTextColor}"/>
    <SolidColorBrush x:Key="BorderBrush" Color="{DynamicResource BorderColor}" />
    <SolidColorBrush x:Key="ControlBorderBrush" Color="{DynamicResource ControlBorderColor}" />
    <SolidColorBrush x:Key="HighlightBrush" Color="{DynamicResource HighlightColor}" />
    <SolidColorBrush x:Key="HighlightTextBrush" Color="{DynamicResource HighlightTextColor}" />
    <SolidColorBrush x:Key="CloseBackgroundBrush" Color="{DynamicResource CloseBackgroundColor}" />
    <SolidColorBrush x:Key="CloseForegroundBrush" Color="{DynamicResource CloseForegroundColor}" />
    <SolidColorBrush x:Key="CloseMouseOverBackgroundBrush" Color="{DynamicResource CloseMouseOverBackgroundColor}" />
    <SolidColorBrush x:Key="CloseMouseOverForegroundBrush" Color="{DynamicResource CloseMouseOverForegroundColor}" />
    <SolidColorBrush x:Key="ConsoleBackgroundBrush" Color="{DynamicResource ConsoleBackgroundColor}" />
    <SolidColorBrush x:Key="ConsoleForegroundBrush" Color="{DynamicResource ConsoleForegroundColor}" />
    <SolidColorBrush x:Key="DataGridAlternatingRowBackgroundBrush" Color="{DynamicResource DataGridAlternatingRowBackgroundColor}" />
    <SolidColorBrush x:Key="DataGridHeaderForegroundBrush" Color="{DynamicResource DataGridHeaderForegroundColor}" />
    <SolidColorBrush x:Key="DataGridHeaderBackgroundBrush" Color="{DynamicResource DataGridHeaderBackgroundColor}" />
    <SolidColorBrush x:Key="ToggleBackgroundBrush" Color="{DynamicResource ToggleBackgroundColor}" />
    <SolidColorBrush x:Key="ToggleForegroundBrush" Color="{DynamicResource ToggleForegroundColor}" />
    <SolidColorBrush x:Key="ToggleOffBackgroundBrush" Color="{DynamicResource ToggleOffBackgroundColor}" />
    <SolidColorBrush x:Key="ToggleOffForegroundBrush" Color="{DynamicResource ToggleOffForegroundColor}" />
    <SolidColorBrush x:Key="TreeViewBackgroundBrush" Color="{DynamicResource TreeViewBackgroundColor}" />
    <SolidColorBrush x:Key="TreeViewForegroundBrush" Color="{DynamicResource TreeViewForegroundColor}" />
    <SolidColorBrush x:Key="TreeViewHighlightBackgroundBrush"  Color="{DynamicResource TreeViewHighlightBackgroundColor}" />
    <SolidColorBrush x:Key="TreeViewHighlightForegroundBrush"  Color="{DynamicResource TreeViewHighlightForegroundColor}" />
    <SolidColorBrush x:Key="StandardButtonBackgroundBrush" Color="{DynamicResource StandardButtonBackgroundColor}" />
    <SolidColorBrush x:Key="StandardButtonForegroundBrush" Color="{DynamicResource StandardButtonForegroundColor}" />
    <SolidColorBrush x:Key="StandardButtonMouseOverBackgroundBrush" Color="{DynamicResource StandardButtonMouseOverBackgroundColor}" />
    <SolidColorBrush x:Key="StandardButtonMouseOverForegroundBrush" Color="{DynamicResource StandardButtonMouseOverForegroundColor}" />
    <SolidColorBrush x:Key="ComboBoxDropDownBackgroundBrush" Color="{DynamicResource ComboBoxDropDownBackgroundColor}" />
    <SolidColorBrush x:Key="ComboBoxDropDownForegroundBrush" Color="{DynamicResource ComboBoxDropDownForegroundColor}" />
    <SolidColorBrush x:Key="RadioButtonToggleBrush" Color="{DynamicResource RadioButtonToggleColor}" />
    <SolidColorBrush x:Key="MenuHighlightBrush" Color="{DynamicResource MenuHighlightColor}" />

    <DropShadowEffect x:Key="WindowDropShadow" BlurRadius="15" Color="{DynamicResource WindowTextColor}" ShadowDepth="0" Direction="0" Opacity="0.75" />

    <Style TargetType="Window" x:Key="MainWindow">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
    </Style>
    <Style TargetType="Window" x:Key="DialogWindow">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
    </Style>
    <Style TargetType="Border" x:Key="CaptionBorder">
        <Setter Property="Padding" Value="0" />
        <Setter Property="CornerRadius" Value="6,6,0,0" />
        <Setter Property="Background" Value="{DynamicResource ActiveCaptionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1.5" />
    </Style>
    <Style TargetType="Border" x:Key="BodyBorder">
        <Setter Property="Background" Value="{DynamicResource WindowBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1,0,1,1" />
    </Style>
    <Style TargetType="Border" x:Key="ToolbarBorder">
        <Setter Property="Padding" Value="5,3" />
        <Setter Property="Background" Value="{DynamicResource WindowBrush}" />
    </Style>
    <Style TargetType="Border" x:Key="ConsoleBorder">
        <Setter Property="Background" Value="{DynamicResource WindowBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
    </Style>
    <Style TargetType="TextBlock" x:Key="CaptionText">
        <Setter Property="Foreground" Value="{DynamicResource ActiveCaptionTextBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,5,0,4" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource TitlebarFontSize}" />
    </Style>
    <Style TargetType="RichTextBox" x:Key="ConsoleTextBox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{DynamicResource ConsoleBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ConsoleForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="IsReadOnly" Value="False" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="FontFamily" Value="{DynamicResource ConsoleFontFamily}" />
    </Style>
    <Style TargetType="controls:TitlebarButton" x:Key="ToolbarButton">
        <Setter Property="ButtonType" Value="Custom" />
        <Setter Property="Width" Value="28" />
        <Setter Property="Height" Value="28" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsBorderShownOnlyOnMouseOver" Value="True" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
        <Setter Property="MouseOverBackground" Value="{DynamicResource HighlightBrush}" />
        <Setter Property="MouseOverForeground" Value="{DynamicResource HighlightTextBrush}" />
    </Style>
    <Style TargetType="controls:TitlebarButton" x:Key="TitlebarButton">
        <Setter Property="Height" Value="30" />
        <Setter Property="CornerRadius" Value="6,0,0,0" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsBorderShownOnlyOnMouseOver" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
        <Setter Property="Width" Value="{DynamicResource TitlebarButtonWidth}" />
        <Setter Property="FontSize" Value="{DynamicResource TitlebarFontSize}" />
        <Setter Property="MouseOverBackground" Value="{DynamicResource HighlightBrush}" />
        <Setter Property="MouseOverForeground" Value="{DynamicResource HighlightTextBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
    </Style>
    <Style TargetType="controls:ToggleSwitch">
        <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
        <Setter Property="OnBackground" Value="{DynamicResource HighlightBrush}" />
        <Setter Property="OnText" Value="Yes" />
        <Setter Property="OffText" Value="No" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
    </Style>
    <Style TargetType="GroupBox">
        <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
        <Setter Property="Margin" Value="5,0,0,0" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
    </Style>
    <Style TargetType="controls:TitlebarButton" x:Key="CloseTitlebarButton" BasedOn="{StaticResource TitlebarButton}">
        <Setter Property="MouseOverBackground" Value="{DynamicResource CloseMouseOverBackgroundBrush}" />
        <Setter Property="MouseOverForeground" Value="{DynamicResource CloseMouseOverForegroundBrush}" />
        <Setter Property="CornerRadius" Value="0,5,0,0" />
    </Style>
    <Style TargetType="controls:VerticalSeparator">
        <Setter Property="Padding" Value="3" />
        <Setter Property="Thickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource BorderBrush}" />
    </Style>
    <Style TargetType="TextBlock" x:Key="ToolbarTextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="5,0,10,0" />
        <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
    </Style>
    <Style TargetType="TextBlock" x:Key="WindowTextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
    </Style>
    <Style TargetType="TextBlock" x:Key="TreeViewIconTextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource IconFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource TreeViewIconSize}" />
        <Setter Property="Margin" Value="0,0,10,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource TreeViewForegroundBrush}" />
    </Style>
    <Style TargetType="TextBlock" x:Key="TreeViewItemTextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource TreeViewForegroundBrush}" />
        <Setter Property="Margin" Value="0,0,5,0" />
    </Style>
    <Style TargetType="TreeView" x:Key="SettingsTreeView">
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,0,4,0" />
        <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
        <Setter Property="Background" Value="{DynamicResource TreeViewBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TreeViewForegroundBrush}" />
    </Style>
    <Style TargetType="GridSplitter" x:Key="VerticalSplitter">
        <Setter Property="Width" Value="4" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Background" Value="{DynamicResource WindowBrush}" />
        <Setter Property="BorderThickness" Value="1,0" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
    </Style>
    <Style TargetType="Menu" x:Key="ToolbarMenu">
        <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Background" Value="{DynamicResource WindowBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
        <Setter Property="Margin" Value="0,0,10,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="templateRoot" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Center" Margin="6" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" 
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" Grid.Row="1">
                            <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                      Grid.Column="0" Focusable="false" Grid.Row="0" Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding ConverterParameter="0" Converter="{StaticResource MenuScrollingVisibilityConverter}" 
                                              FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource UpArrow}" Fill="{DynamicResource WindowTextBrush}"/>
                        </RepeatButton>
                        <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                      Grid.Column="0" Focusable="false" Grid.Row="2" Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding ConverterParameter="100" Converter="{StaticResource MenuScrollingVisibilityConverter}" 
                                              FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource DownArrow}" Fill="{DynamicResource WindowTextBrush}"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{DynamicResource WindowTextBrush}" 
                      Margin="3" VerticalAlignment="Center" Visibility="Collapsed"/>
                <ContentPresenter ContentSource="Header" Grid.Column="1" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource HighlightBackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ControlBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource ControlBorderBrush}"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="{DynamicResource ControlBorderBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True"/>
                    <Condition Property="IsEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource WindowBackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ControlBorderBrush}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{TemplateBinding Foreground}" 
                      Margin="3" VerticalAlignment="Center" Visibility="Collapsed"/>
                <ContentPresenter ContentSource="Header" Grid.Column="1" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" 
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" 
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" PlacementTarget="{Binding ElementName=templateRoot}">
                    <Border x:Name="SubMenuBorder" Background="{DynamicResource WindowBrush}" BorderBrush="{DynamicResource ControlBorderBrush}" 
                            BorderThickness="1" Padding="2">
                        <ScrollViewer x:Name="SubMenuScrollViewer" 
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}"
                                               Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <Rectangle Fill="{DynamicResource WindowBrush}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource HighlightBackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ControlBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource ControlBorderBrush}"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="{DynamicResource ControlBorderBrush}"/>
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" Height="22" SnapsToDevicePixels="true">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Border x:Name="GlyphPanel" Background="{DynamicResource WindowBrush}" BorderBrush="{DynamicResource ControlBorderBrush}" 
                        BorderThickness="1" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" 
                        Visibility="Hidden" Width="22">
                    <Path x:Name="Glyph" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{DynamicResource WindowTextBrush}" 
                          Height="11" Width="10"/>
                </Border>
                <ContentPresenter x:Name="menuHeaderContainer" ContentSource="Header" Grid.Column="2" HorizontalAlignment="Left" 
                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="Center"/>
                <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" 
                           VerticalAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource MenuHighlightBrush}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ControlBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="templateRoot" Value="0.5"/>
                <Setter Property="Opacity" TargetName="Icon" Value="0.5" />
                <Setter Property="Fill" TargetName="Glyph" Value="{DynamicResource ControlBorderBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True"/>
                    <Condition Property="IsEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource ControlBorderBrush}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ControlBorderBrush}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" Height="22" SnapsToDevicePixels="true">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Border x:Name="GlyphPanel" Background="{DynamicResource HighlightBrush}" BorderBrush="{DynamicResource ControlBorderBrush}" 
                        BorderThickness="1" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22">
                    <Path x:Name="Glyph" Data="{DynamicResource Checkmark}" FlowDirection="LeftToRight" Fill="{DynamicResource WindowTextBrush}" 
                          Height="11" Width="9"/>
                </Border>
                <ContentPresenter ContentSource="Header" Grid.Column="2" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                <Path x:Name="RightArrow" Grid.Column="5" Data="{StaticResource RightArrow}" Fill="{DynamicResource WindowTextBrush}" 
                      HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" 
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
                    <Border x:Name="SubMenuBorder" Background="{DynamicResource WindowBrush}" BorderBrush="{DynamicResource ControlBorderBrush}" 
                            BorderThickness="1" Padding="2">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" 
                                               Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource HighlightBackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ControlBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource ControlBorderBrush}"/>
                <Setter Property="Fill" TargetName="Glyph" Value="{DynamicResource ControlBorderBrush}"/>
                <Setter Property="Fill" TargetName="RightArrow" Value="{DynamicResource ControlBorderBrush}"/>
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ToolbarMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                <Setter Property="Padding" Value="6,0"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Background" Value="{DynamicResource WindowBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                <Setter Property="Padding" Value="6,0"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="StandardButton">
        <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
        <Setter Property="Background" Value="{DynamicResource StandardButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource StandardButtonForegroundBrush}" />
        <Setter Property="Width" Value="75" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="0,0,10,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"  Grid.Column="1" CornerRadius="3" 
                            Background="{DynamicResource StandardButtonBackgroundBrush}" BorderBrush="{DynamicResource ControlBorderBrush}" 
                            BorderThickness="1">
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Margin="3" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource StandardButtonMouseOverBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ComboBox" x:Key="ToolbarComboBox">
        <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,10,0" />
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxDropDownForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Grid.Column="2" Focusable="false" 
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="Border"  Grid.Column="1" CornerRadius="0,3,3,0" 
                                                Background="{DynamicResource StandardButtonBackgroundBrush}" BorderBrush="{DynamicResource ControlBorderBrush}" 
                                                BorderThickness="1">
                                            <Path x:Name="Arrow" Fill="{DynamicResource StandardButtonForegroundBrush}" Margin="5" HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                        </Border>
                                        <Border Grid.Column="0" CornerRadius="3,0,0,3"  Margin="1" Background="{DynamicResource ConsoleBackgroundBrush}" 
                                                BorderBrush="{DynamicResource ControlBorderBrush}" BorderThickness="1,1,0,1" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource StandardButtonMouseOverBackgroundBrush}" />
                                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource StandardButtonMouseOverForegroundBrush}" />
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="Green" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="3" />
                        <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" 
                               PopupAnimation="Slide">
                            <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" 
                                   MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{DynamicResource ComboBoxDropDownBackgroundBrush}" CornerRadius="0" 
                                        BorderBrush="{DynamicResource ControlBorderBrush}" BorderThickness="1"/>
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="RadioButton" x:Key="StandardRadioButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,0,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Name="OuterGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Ellipse Name="Bullet" Grid.Column="0" Stroke="{DynamicResource ControlBorderBrush}" Fill="Transparent" Width="12" Height="12"
                                 StrokeThickness="2" VerticalAlignment="Center" />
                        <ContentPresenter Grid.Column="1" Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="Bullet" Property="Fill" Value="{DynamicResource RadioButtonToggleBrush}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsEnabled" Value="False">
                            <Setter TargetName="OuterGrid" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TreeView">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border Name="Border" CornerRadius="1" BorderThickness="1" BorderBrush="{DynamicResource ControlBorderBrush}"
                            Background="{DynamicResource TreeViewBackgroundBrush}">
                        <ScrollViewer Focusable="False" CanContentScroll="False" Padding="4">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="15" Height="13" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Collapsed">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Expanded">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="Collapsed" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1,1,1,1" Data="M 4 0 L 8 4 L 4 8 Z"
                              Fill="{DynamicResource TreeViewForegroundBrush}" />
                        <Path x:Name="Expanded" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1,1,1,1" Data="M 0 4 L 8 4 L 4 8 Z" 
                              Visibility="Hidden" Fill="{DynamicResource TreeViewForegroundBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="{DynamicResource ControlBorderBrush}" StrokeDashArray="1 2" Opacity="0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource TreeViewForegroundBrush}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource TreeViewHighlightBackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="SelectedInactive">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ControlBorderColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ItemsHost">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" 
                                      IsChecked="{Binding IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border x:Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="3">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>