<Window x:Class="MakeCompositeIcon.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Core="clr-namespace:Controls.Core;assembly=Controls.Core"
        xmlns:local="clr-namespace:MakeCompositeIcon"

        mc:Ignorable="d" Style="{DynamicResource DefaultSizableWindow}"
        Title="{Binding Title,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
        Height="466" Width="910" Icon="/MakeComositeIcon.ico" MinWidth="950"
        MinHeight="450">
    
    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{Binding FileNewCommand}" />
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding FileOpenCommand}" />
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding FileSaveCommand}" />
        <KeyBinding Key="B" Modifiers="Ctrl" Command="{Binding ShowRecycleCommand}" />
        <KeyBinding Key="A" Modifiers="Ctrl" Command="{Binding FileSaveAsCommand}" />
        <KeyBinding Key="Delete" Modifiers="" Command="{Binding DeleteIconCommand}" />
        <KeyBinding Key="F2" Command="{Binding RenameIconCommand}" />
        <KeyBinding Key="T" Modifiers="Ctrl" Command="{Binding OpenSettingsCommand}" />
    </Window.InputBindings>
    <Window.DataContext>
        <local:MainWindowView />
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" Grid.Row="0">
            <Menu Name="MainMenu" Grid.Row="0" Style="{DynamicResource MainMenu}">
                <MenuItem Header="File" Style="{DynamicResource MenuItems}" >
                    <MenuItem Header="New" InputGestureText="Ctrl-N" Command="{Binding FileNewCommand}">
                        <MenuItem.Icon>
                            <Grid>
                                <Core:FontIcon Glyph="&#xE132;" Foreground="#FFFFFFFF" FontSize="{DynamicResource MenuIconSize}" />
                                <Core:FontIcon Glyph="&#xE130;" Foreground="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" FontSize="{DynamicResource MenuIconSize}" />
                            </Grid>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Open" InputGestureText="Ctrl-O" Command="{Binding FileOpenCommand}">
                        <MenuItem.Icon>
                            <Grid>
                                <Core:FontIcon Glyph="&#xE188;" Foreground="#FFBDAE08" FontSize="{DynamicResource MenuIconSize}" />
                                <Core:FontIcon Glyph="&#xF12B;" Foreground="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" FontSize="{DynamicResource MenuIconSize}" />
                            </Grid>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Save" InputGestureText="Ctrl-S" Command="{Binding FileSaveCommand}">
                        <MenuItem.Icon>                       
                            <Core:FontIcon Glyph="&#xE105;" Foreground="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" FontSize="{DynamicResource MenuIconSize}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Save As" InputGestureText="Ctrl-A" Command="{Binding FileSaveAsCommand}">
                        <MenuItem.Icon>
                            <Core:FontIcon Glyph="&#xE792;" Foreground="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" FontSize="{DynamicResource MenuIconSize}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Delete Icon" InputGestureText="Delete" Command="{Binding DeleteIconCommand}">
                        <MenuItem.Icon>
                            <Core:FontIcon Glyph="&#xE107;" Foreground="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" FontSize="{DynamicResource MenuIconSize}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Exit" Command="{Binding ExitCommand}">
                        <MenuItem.Icon>
                            <Core:FontIcon Glyph="&#xE624;" Foreground="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" FontSize="{DynamicResource MenuIconSize}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Edit">
                    <MenuItem Header="Show Recycle Bin" InputGestureText="Ctrl-B" Command="{Binding ShowRecycleCommand}">
                        <MenuItem.Icon>
                            <Core:FontIcon Glyph="&#xE731;" Foreground="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" 
                                           FontSize="{DynamicResource MenuIconSize}" FontFamily="{DynamicResource PeopleFontFamily}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Settings" InputGestureText="Ctrl-T" Command="{Binding OpenSettingsCommand}">
                        <MenuItem.Icon>
                            <Grid>
                                <Core:FontIcon Grid.Column="0" Glyph="&#xF8B0;" Foreground="#FFECE7BA" FontSize="{DynamicResource MenuIconSize}" />
                                <Core:FontIcon Grid.Column="0" Glyph="&#xE115;" Foreground="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" FontSize="{DynamicResource MenuIconSize}" />
                            </Grid>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="View">
                    <MenuItem Header="Xaml" Command="{Binding ViewXamlCommand}">
                        <MenuItem.Icon>
                            <Grid>
                                <Core:FontIcon Grid.Column="0" Glyph="&#xE732;" FontFamily="{DynamicResource PeopleFontFamily}" Foreground="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" FontSize="{DynamicResource MenuIconSize}" />
                            </Grid>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </Menu>

            <ToolBarTray Grid.Row="0" Background="Transparent">
                <ToolBar Name="MainToolbar" Style="{DynamicResource MainToolbar}">
                    <Button Command="{Binding FileNewCommand}" ToolTip="New File" Style="{DynamicResource ToolbarButton}">
                        <Grid>
                            <Core:FontIcon Glyph="&#xE132;" Foreground="#FFFFFFFF" Style="{DynamicResource ToolbarIcon}" />
                            <Core:FontIcon Glyph="&#xE130;" Foreground="{DynamicResource MyWindowForeground}" Style="{DynamicResource ToolbarIcon}" />
                        </Grid>
                    </Button>
                    <Button Command="{Binding FileOpenCommand}" ToolTip="Open File" Style="{DynamicResource ToolbarButton}">
                        <Grid>
                            <Core:FontIcon Glyph="&#xE188;" Foreground="#FFBDAE08"  Style="{DynamicResource ToolbarIcon}"/>
                            <Core:FontIcon Glyph="&#xF12B;" Foreground="{DynamicResource MyWindowForeground}" Style="{DynamicResource ToolbarIcon}" />
                        </Grid>
                    </Button>
                    <Button Command="{Binding FileSaveCommand}" ToolTip="Save File" Style="{DynamicResource ToolbarButton}">
                        <Core:FontIcon Glyph="&#xE105;" Foreground="{DynamicResource MyWindowForeground}" Style="{DynamicResource ToolbarIcon}" />
                    </Button>
                    <Separator Visibility="{Binding UndoRedoVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                               Foreground="{DynamicResource MyWindowForeground}"/>
                    <Button Command="{Binding DeleteIconCommand}" ToolTip="Delete Icon" Style="{DynamicResource ToolbarButton}">
                        <Core:FontIcon Glyph="&#xE107;" Foreground="{DynamicResource MyWindowForeground}" Style="{DynamicResource ToolbarIcon}" />
                    </Button>
                    <Button Command="{Binding RenameIconCommand}" ToolTip="Rename Icon" Style="{DynamicResource ToolbarButton}">
                        <Core:FontIcon Glyph="&#xE13E;" Foreground="{DynamicResource MyWindowForeground}" FontSize="{DynamicResource MenuIconSize}" />
                    </Button>
                    <Separator />
                    <Button Command="{Binding ShowRecycleCommand}" ToolTip="Show Recycle Bin" Style="{DynamicResource ToolbarButton}">
                        <Core:FontIcon Glyph="&#xE731;" Foreground="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" 
                                       FontSize="{DynamicResource ToolbarIconSize}" FontFamily="{DynamicResource PeopleFontFamily}" />
                    </Button>
                </ToolBar>
                <ToolBar Name="SettingsToolbar" Style="{DynamicResource MainToolbar}" HorizontalAlignment="Right">
                    <Button Command="{Binding OpenSettingsCommand}" ToolTip="Open settings" Style="{DynamicResource ToolbarButton}">
                        <Core:FontIcon Grid.Column="0" Glyph="&#xE115;" Foreground="{DynamicResource MyWindowForeground}" 
                                       Style="{DynamicResource ToolbarIcon}" />
                    </Button>
                </ToolBar>
            </ToolBarTray>
        </StackPanel>
        
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="ListColumn" Width="auto" MinWidth="200" />
                <ColumnDefinition MinWidth="250" />
            </Grid.ColumnDefinitions>

            <Border Style="{DynamicResource FileListArea}" Grid.Column="0">
                <Grid>
                    <ListBox Name="IconListBox" Style="{DynamicResource FileList}" ItemsSource="{Binding Icons}"
                         SelectedItem="{Binding SelectedIcon,UpdateSourceTrigger=Default,Mode=TwoWay}">
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Delete Icon" InputGestureText="Delete" Command="{Binding DeleteIconCommand}">
                                    <MenuItem.Icon>
                                        <Core:FontIcon Glyph="&#xE107;" FontSize="{DynamicResource MenuIconSize}" 
                                                       Foreground="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Rename Icon" InputGestureText="F2" Command="{Binding RenameIconCommand}">
                                    <MenuItem.Icon>
                                        <Core:FontIcon Glyph="&#xE13E;" Foreground="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" FontSize="{DynamicResource MenuIconSize}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Name="itemgrid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid Margin="0,0,10,0" Grid.Column="0">
                                        <Core:FontIcon Glyph="&#xE132;" Foreground="#FFFFFFFF" FontSize="{DynamicResource MenuIconSize}" />
                                        <Core:FontIcon Glyph="&#xE130;" Foreground="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" FontSize="{DynamicResource MenuIconSize}" />
                                    </Grid>
                                    <TextBlock Name="TitleTextBlock" Grid.Column="1" Text="{Binding ShortName}" Style="{DynamicResource StandardTextBlock}" />
                                    <TextBox Name="TitleTextBox" Grid.Column="1" Visibility="Hidden" 
                                             PreviewKeyDown="TitleTextBox_PreviewKeyDown" GotFocus="TitleTextBox_GotFocus" 
                                             Text="{Binding RenameValue,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                </Grid>
                                
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Border>

            <GridSplitter Width="5" VerticalAlignment="Stretch" Grid.Column="0" HorizontalAlignment="Right" BorderThickness="0" 
                          Background="{DynamicResource MyWindowBackground}" Foreground="{DynamicResource MyWindowForeground}"/>
            
            <Border Name="EditAreaBorder" Grid.Column="1" Style="{DynamicResource ImageArea}" 
                    Background="{DynamicResource MyWorkArea}"
                    IsEnabled="{Binding IsEditorEnabled,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Border Grid.Column="0" Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}"
                            BorderBrush="{StaticResource {x:Static SystemColors.ControlLightBrushKey}}"
                            BorderThickness="0,0,1,0" Margin="3,0,0,3">
                        <Grid Name="ItemGrid" Margin="0,0,10,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <ToolBar Name="ItemToolbar" Grid.Row="0" Style="{DynamicResource MainToolbar}"
                                     BorderBrush="{StaticResource {x:Static SystemColors.ControlLightBrushKey}}"
                                     BorderThickness="0,0,0,1">
                                <Button Command="{Binding ShowSettingTypeCommand}" CommandParameter="IconType" ToolTip="Icon Type"
                                         Style="{DynamicResource ToolbarButton}">
                                    <Core:FontIcon Glyph="&#xE8B9;" Foreground="{DynamicResource MyWindowForeground}" Style="{DynamicResource ToolbarIcon}" />
                                </Button>
                                <Button Command="{Binding ShowSettingTypeCommand}" CommandParameter="Colors" ToolTip="Colors"
                                         Style="{DynamicResource ToolbarButton}">
                                    <Core:FontIcon Glyph="&#xE790;" Foreground="{DynamicResource MyWindowForeground}" Style="{DynamicResource ToolbarIcon}" />
                                </Button>
                                <Button Command="{Binding ShowSettingTypeCommand}" CommandParameter="Fonts" ToolTip="Fonts"
                                         Style="{DynamicResource ToolbarButton}">
                                    <Core:FontIcon Glyph="&#xE185;" Foreground="{DynamicResource MyWindowForeground}" Style="{DynamicResource ToolbarIcon}" />
                                </Button>
                                <Button Command="{Binding ShowSettingTypeCommand}" CommandParameter="FontSizes" ToolTip="Font Size"
                                         Style="{DynamicResource ToolbarButton}">
                                    <Core:FontIcon Glyph="&#xE1C8;" Foreground="{DynamicResource MyWindowForeground}" Style="{DynamicResource ToolbarIcon}" />
                                </Button>
                                <Button Command="{Binding ShowSettingTypeCommand}" CommandParameter="Characters" ToolTip="Characters"
                                         Style="{DynamicResource ToolbarButton}">
                                    <Core:FontIcon Glyph="&#xE164;" Foreground="{DynamicResource MyWindowForeground}" Style="{DynamicResource ToolbarIcon}" />
                                </Button>
                            </ToolBar>
                            <Grid Name="InnerItemGrid" Grid.Row="1" Background="{DynamicResource MyWindowBackground}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="1" Background="{DynamicResource MyWindowBackground}"
                                      Visibility="{Binding IconTypeVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                    <StackPanel Orientation="Vertical" Margin="5">
                                        <Label Content="Icon Type" Style="{DynamicResource StandardLabel}" />
                                        <ComboBox Style="{StaticResource StandardComboBox}" ItemsSource="{Binding IconTypes}"
                                              SelectedItem="{Binding SelectedIcon.IconType,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" Style="{DynamicResource StandardTextBlock}" />
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </StackPanel>
                                </Grid>
                                <Grid Grid.Row="2" Background="{DynamicResource MyWindowBackground}"
                                      Visibility="{Binding ColorsVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                    <Grid Margin="5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                        </Grid.RowDefinitions>
                                        <StackPanel Orientation="Horizontal" Grid.Row="0">
                                            <Label Content="Surface" Style="{DynamicResource StandardLabel}"/>
                                            <TextBlock Style="{DynamicResource TextBlockWithHyperlink}">
                                            <Hyperlink Style="{DynamicResource StandardHyperlink}" Command="{Binding SelectedColorCommand}"
                                                       CommandParameter="Surface">
                                                <Hyperlink.ToolTip>
                                                    <TextBlock Width="300" TextWrapping="Wrap">
                                                        <Run>
                                                            This color should be set to the background color of the control the 
                                                            icon will be hosted on.
                                                        </Run>
                                                        <LineBreak />
                                                        <LineBreak />
                                                        <Run>
                                                            If this color is transparent, the backside icon will show if the 
                                                            frontside icon is a wireframe and the icon type is SubscriptedOverlay, 
                                                            because the Surface color is used for clearing the area behind the 
                                                            frontside icon.
                                                        </Run>
                                                   </TextBlock>
                                                </Hyperlink.ToolTip>
                                                <Ellipse Fill="{Binding SelectedIcon.SurfaceBrush,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                         Style="{DynamicResource ColorEllipse}" />
                                            </Hyperlink>
                                        </TextBlock>
                                        </StackPanel>

                                        <CheckBox Content="Use single color" Grid.Row="1" Style="{DynamicResource StandardCheckBox}"
                                              IsChecked="{Binding IsSingleColorSelected,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>

                                        <StackPanel Orientation="Horizontal" Grid.Row="2">
                                            <Label Content="Backside Icon  Color" Style="{DynamicResource StandardLabel}" />
                                            <TextBlock Style="{DynamicResource TextBlockWithHyperlink}">
                                            <Hyperlink Style="{DynamicResource StandardHyperlink}" Command="{Binding SelectedColorCommand}"
                                                       CommandParameter="Primary"
                                                       ToolTip="This is the color of primary, or backside, icon">
                                                <Ellipse Fill="{Binding SelectedIcon.PrimaryBrush,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                         Style="{DynamicResource ColorEllipse}" />
                                            </Hyperlink>
                                            </TextBlock>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" Grid.Row="3" 
                                                Visibility="{Binding SecondaryBrushVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                            <Label Content="Frontside Icon Color" Style="{DynamicResource StandardLabel}"/>
                                            <TextBlock Style="{DynamicResource TextBlockWithHyperlink}">
                                            <Hyperlink Style="{DynamicResource StandardHyperlink}" Command="{Binding SelectedColorCommand}"
                                                       CommandParameter="Secondary"
                                                       ToolTip="This is the color of secondary, or frontside, icon">
                                                <Ellipse Fill="{Binding SelectedIcon.SecondaryBrush,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                         Style="{DynamicResource ColorEllipse}" />
                                            </Hyperlink>
                                            </TextBlock>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
                                <Grid Grid.Row="3" Background="{DynamicResource MyWindowBackground}"
                                      Visibility="{Binding FontsVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                    <Grid Margin="5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                        </Grid.RowDefinitions>

                                        <CheckBox Content="Use single font" Grid.Row="0" Style="{DynamicResource StandardCheckBox}"
                                              IsChecked="{Binding IsSingleFontSelected,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>

                                        <Label Grid.Row="1" Style="{DynamicResource StandardLabel}" Content="Backside" />
                                        <ComboBox Grid.Row="2" Style="{DynamicResource StandardComboBox}" ItemsSource="{Binding Fonts}"
                                                 Background="{DynamicResource MyWindowBackground}"
                                                 Foreground="{DynamicResource MyWindowForeground}"
                                                 SelectedItem="{Binding SelectedIcon.PrimaryFontFamily,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Border Background="{DynamicResource MyWindowBackground}">
                                                        <TextBlock Text="{Binding Source}" Foreground="{DynamicResource MyWindowForeground}" />
                                                    </Border>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>

                                        <Label Grid.Row="3" Style="{DynamicResource StandardLabel}" Content="Frontside" 
                                           Visibility="{Binding SecondaryFontVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                        <ComboBox Grid.Row="4" Style="{DynamicResource StandardComboBox}" ItemsSource="{Binding Fonts}"
                                              Visibility="{Binding SecondaryFontVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"                                          
                                              SelectedItem="{Binding SelectedIcon.SecondaryFontFamily,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Source}" />
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </Grid>
                                </Grid>
                                <Grid Grid.Row="4" Background="{DynamicResource MyWindowBackground}"
                                      Visibility="{Binding SizeVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                    <Grid Margin="5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                        </Grid.RowDefinitions>

                                        <CheckBox Content="Use single size" Grid.Row="0" Style="{DynamicResource StandardCheckBox}"
                                              IsChecked="{Binding IsSingleSizeSelected,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>

                                        <Label Grid.Row="1" Style="{DynamicResource StandardLabel}" Content="Backside Size" />
                                        <StackPanel Orientation="Horizontal" Grid.Row="2">
                                            <Slider Minimum="0" Maximum="200" Margin="0,0,10,0" Width="110" Style="{DynamicResource StandardSlider}"
                                                Value="{Binding SelectedIcon.PrimarySize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                                PreviewMouseUp="PrimarySlider_PreviewMouseUp"/>
                                            <Core:NumericOnlyTextBox Text="{Binding SelectedIcon.PrimarySize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"                                              
                                                 Style="{DynamicResource NumberTextBox}"/>
                                        </StackPanel>
                                        <Label Grid.Row="3" Style="{DynamicResource StandardLabel}" Content="Frontside Size" 
                                           Visibility="{Binding SecondSizeVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                        <StackPanel Orientation="Horizontal" Grid.Row="4"
                                                Visibility="{Binding SecondSizeVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                            <Slider Minimum="0" Maximum="{Binding MaxOverlayIconSize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                                Margin="0,0,10,0" Width="110" Style="{DynamicResource StandardSlider}"
                                                Value="{Binding SelectedIcon.SecondarySize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                                PreviewMouseUp="SecondSlider_PreviewMouseUp"/>
                                            <Core:NumericOnlyTextBox                                                                                    Text="{Binding SelectedIcon.SecondarySize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"                                              
                                                 Style="{DynamicResource NumberTextBox}"/>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
                                <Grid Grid.Row="5" Height="{Binding ElementName=InnerItemGrid,Path=ActualHeight}"
                                      Visibility="{Binding CharactersVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                      Background="{DynamicResource MyWindowBackground}">
                                    <Grid Margin="5" Background="{DynamicResource MyWindowBackground}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0" Grid.Column="0" Style="{DynamicResource StandardTextBlock}"
                                                   Margin="0,0,0,10">
                                            <Hyperlink TextDecorations="None" Command="{Binding ShowCharWindowCommand}" 
                                                       CommandParameter="IsPrimary">
                                                Backside
                                            </Hyperlink>
                                        </TextBlock>
                                        <ListBox ItemsSource="{Binding PrimaryCharacters}" Grid.Row="1" Grid.Column="0"
                                                 Width="{Binding ElementName=PrimeChar,Path=ActualWidth}"
                                                 Background="{DynamicResource MyWindowBackground}"
                                                 Foreground="{DynamicResource MyWindowForeground}"
                                                 SelectedItem="{Binding PrimaryGlyph,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                 SelectionChanged="ListBox_SelectionChanged" 
                                                 IsVisibleChanged="ListBox_IsVisibleChanged">
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock FontFamily="{Binding FontFamily}" Text="{Binding Image}"
                                                            FontSize="{DynamicResource GlyphFontSize}"
                                                            HorizontalAlignment="Center"/>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>

                                        <TextBlock Grid.Row="0" Grid.Column="1" Style="{DynamicResource StandardTextBlock}"
                                                   Margin="0,0,0,10">
                                            <Hyperlink TextDecorations="None" Command="{Binding ShowCharWindowCommand}" 
                                                       CommandParameter="IsSecondary">
                                                FrontSide
                                            </Hyperlink>
                                        </TextBlock>
                                        <ListBox ItemsSource="{Binding SecondaryCharacters}" Grid.Row="1" Grid.Column="1"
                                                 Width="{Binding ElementName=SecondChar,Path=ActualWidth}"
                                                 Background="{DynamicResource MyWindowBackground}"
                                                 Foreground="{DynamicResource MyWindowForeground}"
                                                 SelectedItem="{Binding SecondaryGlyph,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                 SelectionChanged="ListBox_SelectionChanged"
                                                 IsVisibleChanged="ListBox_IsVisibleChanged">
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock FontFamily="{Binding FontFamily}" Text="{Binding Image}"
                                                            FontSize="{DynamicResource GlyphFontSize}"
                                                            HorizontalAlignment="Center"/>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Border>

                    <StackPanel Orientation="Vertical" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" Margin="0,0,10,0" 
                                       Visibility="{Binding OffsetVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                <Hyperlink TextDecorations="None" Command="{Binding CenterVerticallyCommand}">0</Hyperlink>
                            </TextBlock>
                            <Slider Orientation="Vertical" Margin="20,360,0,0" Height="180" 
                                    Ticks="0" TickPlacement="TopLeft"
                                    Visibility="{Binding OffsetVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                    Value="{Binding SelectedIcon.SecondaryVerticalOffset,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                    Minimum="{Binding OffsetNegative,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                    Maximum="{Binding OffsetPositive,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                <!-- Had to flip this over so slider direction matches actual direction of movement -->
                                <!-- That accounts for the strange margins above -->
                                <Slider.RenderTransform>
                                    <RotateTransform Angle="180" />
                                </Slider.RenderTransform>

                            </Slider>
                            <Border Style="{DynamicResource IconArea}">
                                <Border.Effect>
                                    <DropShadowEffect Direction="0" Opacity="0.5" BlurRadius="20" ShadowDepth="0"/>
                                </Border.Effect>

                                <Grid Name="AreaGrid" Background="{Binding SelectedIcon.SurfaceBrush}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    
                                    <TextBlock Text="{Binding SelectedIcon.PrimaryGlyph,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                               Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2"
                                               FontSize="{Binding SelectedIcon.PrimarySize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                               FontFamily="{Binding SelectedIcon.PrimaryFontFamily,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                               Foreground="{Binding SelectedIcon.PrimaryBrush,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                               HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                    <TextBlock Text="{Binding SelectedIcon.SecondaryGlyph,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                               Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2"
                                               Margin="{Binding SecondaryMargin,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                               FontSize="{Binding SelectedIcon.SecondarySize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                               FontFamily="{Binding SelectedIcon.SecondaryFontFamily,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                               Foreground="{Binding SelectedIcon.SecondaryBrush,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                               Visibility="{Binding CenteredVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>

                                    <Border Background="{Binding SelectedIcon.SurfaceBrush}" Grid.Column="1" Grid.Row="1"
                                            Visibility="{Binding SubscriptVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                            Padding="5" HorizontalAlignment="Right" VerticalAlignment="Bottom">

                                        <TextBlock Text="{Binding SelectedIcon.SecondaryGlyph,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                   Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2"
                                                   FontSize="{Binding SelectedIcon.SecondarySize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                   FontFamily="{Binding SelectedIcon.SecondaryFontFamily,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                   Foreground="{Binding SelectedIcon.SecondaryBrush,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>

                                    <Line Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Style="{DynamicResource GuidLine}" 
                                          HorizontalAlignment="Right" VerticalAlignment="Stretch" 
                                          Stroke="{Binding GuideBrush,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                          X2="0" Y2="{Binding ElementName=AreaGrid,Path=ActualHeight}"
                                          Visibility="{Binding GuideVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                    <Line Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Style="{DynamicResource GuidLine}" 
                                          HorizontalAlignment="Stretch" VerticalAlignment="Bottom" 
                                          Stroke="{Binding GuideBrush,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                          X2="{Binding ElementName=AreaGrid,Path=ActualWidth}" Y2="0" 
                                          Visibility="{Binding GuideVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                </Grid>

                            </Border>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Margin="90,-140,20,20">
                            <Slider Orientation="Horizontal"  Width="180"
                                    Ticks="0" TickPlacement="TopLeft" VerticalAlignment="Top"
                                    Visibility="{Binding OffsetVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                    Value="{Binding SelectedIcon.SecondaryHorizontalOffset,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                    Minimum="{Binding OffsetNegative,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                    Maximum="{Binding OffsetPositive,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                           
                            </Slider>
                            <TextBlock HorizontalAlignment="Center" Margin="0,0,0,0" 
                                       Visibility="{Binding OffsetVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                <Hyperlink TextDecorations="None" Command="{Binding CenterHorizontallyCommand}">0</Hyperlink>
                            </TextBlock>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>

        <StatusBar Grid.Row="3" Style="{DynamicResource MainStatusBar}" Margin="10,0">
            <StatusBarItem>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <Core:FontIcon Grid.Column="0" Glyph="&#xE132;" Foreground="#FFFFFFFF" Style="{DynamicResource ToolbarIcon}" />
                    <Core:FontIcon Grid.Column="0" Glyph="&#xE130;" Foreground="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}" Style="{DynamicResource ToolbarIcon}" />
                    <TextBlock Grid.Column="1" Margin="10,0,0,0">
                        <Hyperlink TextDecorations="Underline" Command="{Binding GoToFileCommand}">
                            <Run Text="{Binding SelectedIcon.FullPath,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,FallbackValue=Not set}" />
                        </Hyperlink>
                    </TextBlock>
                </Grid>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
