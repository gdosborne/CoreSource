<Window x:Class="MakeCompositeIcon.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Core="clr-namespace:Controls.Core;assembly=Controls.Core"
        xmlns:local="clr-namespace:MakeCompositeIcon"

        mc:Ignorable="d" Style="{DynamicResource DefaultSizableWindow}"
        Title="{Binding Title,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
        Height="450" Width="800" Icon="/MakeComositeIcon.ico">
    
    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{Binding FileNewCommand}" />
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding FileOpenCommand}" />
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding FileSaveCommand}" />
        <KeyBinding Key="A" Modifiers="Ctrl" Command="{Binding FileSaveAsCommand}" />
        <KeyBinding Key="Delete" Modifiers="" Command="{Binding DeleteIconCommand}" />
        <KeyBinding Key="Z" Modifiers="Ctrl" Command="{Binding UndoCommand}" />
        <KeyBinding Key="Y" Modifiers="Ctrl" Command="{Binding RedoCommand}" />
        <KeyBinding Key="X" Modifiers="Ctrl" Command="{Binding CutCommand}" />
        <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding CopyCommand}" />
        <KeyBinding Key="V" Modifiers="Ctrl" Command="{Binding PasteCommand}" />
        <KeyBinding Key="T" Modifiers="Ctrl" Command="{Binding OpenSettingsCommand}" />
    </Window.InputBindings>
    <Window.DataContext>
        <local:MainWindowView />
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" Style="{DynamicResource MainMenu}">
            <MenuItem Header="File" Style="{DynamicResource MenuItems}" >
                <MenuItem Header="New" InputGestureText="Ctrl-N" Command="{Binding FileNewCommand}">
                    <MenuItem.Icon>
                        <Grid>
                            <Core:FontIcon Glyph="&#xE132;" Foreground="#FFFFFFFF" FontSize="{DynamicResource MenuIconSize}" />
                            <Core:FontIcon Glyph="&#xE130;" Foreground="Black" FontSize="{DynamicResource MenuIconSize}" />
                        </Grid>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Open" InputGestureText="Ctrl-O" Command="{Binding FileOpenCommand}">
                    <MenuItem.Icon>
                        <Grid>
                            <Core:FontIcon Glyph="&#xE188;" Foreground="#FFBDAE08" FontSize="{DynamicResource MenuIconSize}" />
                            <Core:FontIcon Glyph="&#xF12B;" Foreground="Black" FontSize="{DynamicResource MenuIconSize}" />
                        </Grid>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save" InputGestureText="Ctrl-S" Command="{Binding FileSaveCommand}">
                    <MenuItem.Icon>                       
                        <Core:FontIcon Glyph="&#xE105;" Foreground="Black" FontSize="{DynamicResource MenuIconSize}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save As" InputGestureText="Ctrl-A" Command="{Binding FileSaveAsCommand}">
                    <MenuItem.Icon>
                        <Core:FontIcon Glyph="&#xE792;" Foreground="Black" FontSize="{DynamicResource MenuIconSize}" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <!--<MenuItem Header="Close Icon" Command="{Binding CloseIconCommand}">
                    <MenuItem.Icon>
                        <Core:FontIcon Glyph="&#xE13F;" Foreground="Black" FontSize="{DynamicResource MenuIconSize}" />
                    </MenuItem.Icon>
                </MenuItem>-->
                <MenuItem Header="Delete Icon" InputGestureText="Delete" Command="{Binding DeleteIconCommand}">
                    <MenuItem.Icon>
                        <Core:FontIcon Glyph="&#xE107;" Foreground="Black" FontSize="{DynamicResource MenuIconSize}" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Exit" Command="{Binding ExitCommand}">
                    <MenuItem.Icon>
                        <Core:FontIcon Glyph="&#xE624;" Foreground="Black" FontSize="{DynamicResource MenuIconSize}" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Undo" InputGestureText="Ctrl-Z" Command="{Binding UndoCommand}"
                          Visibility="{Binding UndoRedoVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                    <MenuItem.Icon>
                        <Core:FontIcon Glyph="&#xE10E;" Foreground="Black" FontSize="{DynamicResource MenuIconSize}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Redo" InputGestureText="Ctrl-Y" Command="{Binding RedoCommand}"
                          Visibility="{Binding UndoRedoVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                    <MenuItem.Icon>
                        <Core:FontIcon Glyph="&#xE10D;" Foreground="Black" FontSize="{DynamicResource MenuIconSize}" />
                    </MenuItem.Icon>
                </MenuItem>
                <!--<Separator />
                <MenuItem Header="Cut" InputGestureText="Ctrl-X" Command="{Binding CutCommand}">
                    <MenuItem.Icon>
                        <Core:FontIcon Glyph="&#xE16B;" Foreground="Black" FontSize="{DynamicResource MenuIconSize}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Copy" InputGestureText="Ctrl-C" Command="{Binding CopyCommand}">
                    <MenuItem.Icon>
                        <Core:FontIcon Glyph="&#xE16F;" Foreground="Black" FontSize="{DynamicResource MenuIconSize}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Paste" InputGestureText="Ctrl-V" Command="{Binding PasteCommand}">
                    <MenuItem.Icon>
                        <Core:FontIcon Glyph="&#xE16D;" Foreground="Black" FontSize="{DynamicResource MenuIconSize}" />
                    </MenuItem.Icon>
                </MenuItem>-->
                <Separator />
                <MenuItem Header="Settings" InputGestureText="Ctrl-T" Command="{Binding OpenSettingsCommand}">
                    <MenuItem.Icon>
                        <Grid>
                            <Core:FontIcon Grid.Column="0" Glyph="&#xF8B0;" Foreground="#FFECE7BA" FontSize="{DynamicResource MenuIconSize}" />
                            <Core:FontIcon Grid.Column="0" Glyph="&#xE115;" Foreground="Black" FontSize="{DynamicResource MenuIconSize}" />
                        </Grid>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="Xaml" Command="{Binding ViewXamlCommand}">
                    <MenuItem.Icon>
                        <Grid>
                            <Core:FontIcon Grid.Column="0" Glyph="&#xE732;" FontFamily="{DynamicResource PeopleFontFamily}" Foreground="Black" FontSize="{DynamicResource MenuIconSize}" />
                        </Grid>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <ToolBar Name="MainToolbar" Grid.Row="1" Style="{DynamicResource MainToolbar}">
            <Button Command="{Binding FileNewCommand}" ToolTip="New File">
                <Grid>
                    <Core:FontIcon Glyph="&#xE132;" Foreground="#FFFFFFFF" Style="{DynamicResource ToolbarIcon}" />
                    <Core:FontIcon Glyph="&#xE130;" Foreground="Black" Style="{DynamicResource ToolbarIcon}" />
                </Grid>
            </Button>
            <Button Command="{Binding FileOpenCommand}" ToolTip="Open File">
                <Grid>
                    <Core:FontIcon Glyph="&#xE188;" Foreground="#FFBDAE08"  Style="{DynamicResource ToolbarIcon}"/>
                    <Core:FontIcon Glyph="&#xF12B;" Foreground="Black"  Style="{DynamicResource ToolbarIcon}" />
                </Grid>
            </Button>
            <Button Command="{Binding FileSaveCommand}" ToolTip="Save File">
                <Core:FontIcon Glyph="&#xE105;" Foreground="Black"  Style="{DynamicResource ToolbarIcon}" />
            </Button>
            <Separator />
            <Button Command="{Binding UndoCommand}" ToolTip="Undo" 
                    Visibility="{Binding UndoRedoVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                <Core:FontIcon Glyph="&#xE10E;" Foreground="Black"  Style="{DynamicResource ToolbarIcon}" />
            </Button>
            <Button Command="{Binding RedoCommand}" ToolTip="Redo"
                    Visibility="{Binding UndoRedoVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                <Core:FontIcon Glyph="&#xE10D;" Foreground="Black"  Style="{DynamicResource ToolbarIcon}" />
            </Button>
            <Separator Visibility="{Binding UndoRedoVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
            <Button Command="{Binding DeleteIconCommand}" ToolTip="Delete Icon">
                <Core:FontIcon Glyph="&#xE107;" Foreground="Black"  Style="{DynamicResource ToolbarIcon}" />
            </Button>
            <!--<Button Command="{Binding CopyCommand}" ToolTip="Copy">
                <Core:FontIcon Glyph="&#xE16F;" Foreground="Black"  Style="{DynamicResource ToolbarIcon}" />
            </Button>
            <Button Command="{Binding PasteCommand}" ToolTip="Paste">
                <Core:FontIcon Glyph="&#xE16D;" Foreground="Black"  Style="{DynamicResource ToolbarIcon}" />
            </Button>-->
        </ToolBar>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="ListColumn" Width="auto" MinWidth="250" />
                <ColumnDefinition MinWidth="250" />
            </Grid.ColumnDefinitions>

            <Border Grid.Row="2" Style="{DynamicResource FileListArea}">
                <ListBox Grid.Column="0" Style="{DynamicResource FileList}" ItemsSource="{Binding Icons}"
                         SelectedItem="{Binding SelectedIcon,UpdateSourceTrigger=Default,Mode=TwoWay}">
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Delete Icon" InputGestureText="Delete" Command="{Binding DeleteIconCommand}">
                                <MenuItem.Icon>
                                    <Core:FontIcon Glyph="&#xE107;" Foreground="Black" FontSize="{DynamicResource MenuIconSize}" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Grid Margin="0,0,10,0">
                                    <Core:FontIcon Glyph="&#xE132;" Foreground="#FFFFFFFF" FontSize="{DynamicResource MenuIconSize}" />
                                    <Core:FontIcon Glyph="&#xE130;" Foreground="Black" FontSize="{DynamicResource MenuIconSize}" />
                                </Grid>
                                <TextBlock Text="{Binding Filename}" Style="{DynamicResource StandardTextBlock}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Border>
            
            <GridSplitter Width="5" VerticalAlignment="Stretch" Grid.Column="0" HorizontalAlignment="Right" BorderThickness="0" 
                          Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}"/>
            
            <Border Grid.Column="1" Style="{DynamicResource ImageArea}" Background="{DynamicResource VertLightBrush}"
                    IsEnabled="{Binding IsEditorEnabled,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0">
                        <Expander Header="Icon Type" Style="{DynamicResource SectionExpander}" 
                                  IsExpanded="{Binding IsIconTypeExpanded,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                            <StackPanel Orientation="Vertical" Margin="5">
                                <Label Content="Icon Type" Style="{DynamicResource StandardLabel}" />
                                <ComboBox Style="{StaticResource StandardComboBox}" ItemsSource="{Binding IconTypes}"
                                          SelectedItem="{Binding SelectedIcon.IconType,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" Style="{DynamicResource StandardTextBlock}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                        </Expander>
                        <Expander Header="Colors" Style="{DynamicResource SectionExpander}"
                                  IsExpanded="{Binding IsColorExpanded,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                            <Grid Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal" Grid.Row="0">
                                    <Label Content="Surface" Style="{DynamicResource StandardLabel}"/>
                                    <TextBlock Style="{DynamicResource TextBlockWithHyperlink}">
                                        <Hyperlink Style="{DynamicResource StandardHyperlink}" Command="{Binding SelectedColorCommand}"
                                                   CommandParameter="Surface">
                                            <Hyperlink.ToolTip>
                                                <TextBlock Width="300" TextWrapping="Wrap">
                                                    <Run>
                                                        This color should be set to the background color of the control the 
                                                        icon will be hosted on.
                                                    </Run>
                                                    <LineBreak />
                                                    <LineBreak />
                                                    <Run>
                                                        If this color is transparent, the backside icon will show if the 
                                                        frontside icon is a wireframe and the icon type is SubscriptedOverlay, 
                                                        because the Surface color is used for clearing the area behind the 
                                                        frontside icon.
                                                    </Run>
                                               </TextBlock>
                                            </Hyperlink.ToolTip>
                                            <Ellipse Fill="{Binding SelectedIcon.SurfaceBrush,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                     Style="{DynamicResource ColorEllipse}" />
                                        </Hyperlink>
                                    </TextBlock>
                                </StackPanel>
                                
                                <CheckBox Content="Use single color" Grid.Row="1" Style="{DynamicResource StandardCheckBox}"
                                          IsChecked="{Binding IsSingleColorSelected,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                
                                <StackPanel Orientation="Horizontal" Grid.Row="2">
                                    <Label Content="Backside Icon  Color" Style="{DynamicResource StandardLabel}" />
                                    <TextBlock Style="{DynamicResource TextBlockWithHyperlink}">
                                        <Hyperlink Style="{DynamicResource StandardHyperlink}" Command="{Binding SelectedColorCommand}"
                                                   CommandParameter="Primary"
                                                   ToolTip="This is the color of primary, or backside, icon">
                                            <Ellipse Fill="{Binding SelectedIcon.PrimaryBrush,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                     Style="{DynamicResource ColorEllipse}" />
                                        </Hyperlink>
                                    </TextBlock>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal" Grid.Row="3" 
                                            Visibility="{Binding SecondaryBrushVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                    <Label Content="Frontside Icon Color" Style="{DynamicResource StandardLabel}"/>
                                    <TextBlock Style="{DynamicResource TextBlockWithHyperlink}">
                                        <Hyperlink Style="{DynamicResource StandardHyperlink}" Command="{Binding SelectedColorCommand}"
                                                   CommandParameter="Secondary"
                                                   ToolTip="This is the color of secondary, or frontside, icon">
                                            <Ellipse Fill="{Binding SelectedIcon.SecondaryBrush,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                     Style="{DynamicResource ColorEllipse}" />
                                        </Hyperlink>
                                    </TextBlock>
                                </StackPanel>
                            </Grid>
                        </Expander>
                        <Expander Header="Fonts" Style="{DynamicResource SectionExpander}"
                                  IsExpanded="{Binding IsFontExpanded,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                            <Grid Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>

                                <CheckBox Content="Use single font" Grid.Row="0" Style="{DynamicResource StandardCheckBox}"
                                          IsChecked="{Binding IsSingleFontSelected,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>

                                <Label Grid.Row="1" Style="{DynamicResource StandardLabel}" Content="Backside" />
                                <ComboBox Grid.Row="2" Style="{DynamicResource StandardComboBox}" ItemsSource="{Binding Fonts}"                                           
                                          SelectedItem="{Binding SelectedIcon.PrimaryFontFamily,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Source}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>                                
                                
                                <Label Grid.Row="3" Style="{DynamicResource StandardLabel}" Content="Frontside" 
                                       Visibility="{Binding SecondaryFontVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                <ComboBox Grid.Row="4" Style="{DynamicResource StandardComboBox}" ItemsSource="{Binding Fonts}"
                                          Visibility="{Binding SecondaryFontVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"                                          
                                          SelectedItem="{Binding SelectedIcon.SecondaryFontFamily,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Source}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </Grid>
                        </Expander>
                        <Expander Header="Font Sizes" Style="{DynamicResource SectionExpander}"
                                  IsExpanded="{Binding IsSizeExpanded,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                            <Grid Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>

                                <CheckBox Content="Use single size" Grid.Row="0" Style="{DynamicResource StandardCheckBox}"
                                          IsChecked="{Binding IsSingleSizeSelected,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>

                                <Label Grid.Row="1" Style="{DynamicResource StandardLabel}" Content="Backside Size" />
                                <StackPanel Orientation="Horizontal" Grid.Row="2">
                                    <Slider Minimum="0" Maximum="200" Margin="0,0,10,0" Width="110" Style="{DynamicResource StandardSlider}"
                                            Value="{Binding SelectedIcon.PrimarySize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                            PreviewMouseUp="PrimarySlider_PreviewMouseUp"/>
                                    <Core:NumericOnlyTextBox Text="{Binding SelectedIcon.PrimarySize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"                                              
                                             Style="{DynamicResource NumberTextBox}"/>
                                </StackPanel>
                                <Label Grid.Row="3" Style="{DynamicResource StandardLabel}" Content="Frontside Size" 
                                       Visibility="{Binding SecondSizeVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                <StackPanel Orientation="Horizontal" Grid.Row="4"
                                            Visibility="{Binding SecondSizeVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                    <Slider Minimum="0" Maximum="{Binding MaxOverlayIconSize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                            Margin="0,0,10,0" Width="110" Style="{DynamicResource StandardSlider}"
                                            Value="{Binding SelectedIcon.SecondarySize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                            PreviewMouseUp="SecondSlider_PreviewMouseUp"/>
                                    <Core:NumericOnlyTextBox                                                                                    Text="{Binding SelectedIcon.SecondarySize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"                                              
                                             Style="{DynamicResource NumberTextBox}"/>
                                </StackPanel>
                            </Grid>
                        </Expander>
                        <Expander Header="Characters" Style="{DynamicResource SectionExpander}"
                                  IsExpanded="{Binding IsGlyphExpanded,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                            <Grid Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Style="{DynamicResource StandardLabel}" Content="Backside Glyph" />
                                <StackPanel Orientation="Vertical" Grid.Row="1" HorizontalAlignment="Center">
                                    <TextBox Name="PrimeChar" Style="{DynamicResource CharacterTextBox}" GotFocus="TextBox_GotFocus"
                                             Text="{Binding SelectedIcon.PrimaryGlyph,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                             Foreground="{Binding SelectedIcon.PrimaryBrush,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                             FontFamily="{Binding SelectedIcon.PrimaryFontFamily,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                    <ComboBox ItemsSource="{Binding PrimaryCharacters}" Width="{Binding ElementName=PrimeChar,Path=ActualWidth}"
                                              SelectedItem="{Binding SelectedPrimaryCharacter,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock FontFamily="{Binding FontFamily}" Text="{Binding Image}"
                                                           FontSize="{DynamicResource GlyphFontSize}"
                                                           HorizontalAlignment="Center"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </StackPanel>
                                <Label Grid.Row="2" Style="{DynamicResource StandardLabel}" Content="Frontside Glyph" />
                                <StackPanel Orientation="Vertical" Grid.Row="3" HorizontalAlignment="Center">
                                    <TextBox Name="SecondChar" Style="{DynamicResource CharacterTextBox}" GotFocus="TextBox_GotFocus"
                                             Text="{Binding SelectedIcon.SecondaryGlyph,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                             Foreground="{Binding SelectedIcon.SecondaryBrush,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                             FontFamily="{Binding SelectedIcon.SecondaryFontFamily,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                                    <ComboBox ItemsSource="{Binding SecondaryCharacters}" Width="{Binding ElementName=SecondChar,Path=ActualWidth}"
                                              SelectedItem="{Binding SelectedSecondaryCharacter,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock FontFamily="{Binding FontFamily}" Text="{Binding Image}"
                                                           FontSize="{DynamicResource GlyphFontSize}"
                                                           HorizontalAlignment="Center"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </StackPanel>
                            </Grid>
                        </Expander>
                    </StackPanel>

                    <Border Grid.Column="1" Style="{DynamicResource IconArea}">
                        <Border.Effect>
                            <DropShadowEffect Direction="0" Opacity="0.5" BlurRadius="20" ShadowDepth="0"/>
                        </Border.Effect>

                        <Grid Background="{Binding SelectedIcon.SurfaceBrush}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock Text="{Binding SelectedIcon.PrimaryGlyph,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                       Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2"
                                       FontSize="{Binding SelectedIcon.PrimarySize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                       FontFamily="{Binding SelectedIcon.PrimaryFontFamily,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                       Foreground="{Binding SelectedIcon.PrimaryBrush,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                       HorizontalAlignment="Center" VerticalAlignment="Center"/>

                            <TextBlock Text="{Binding SelectedIcon.SecondaryGlyph,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                       Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2"
                                       FontSize="{Binding SelectedIcon.SecondarySize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                       FontFamily="{Binding SelectedIcon.SecondaryFontFamily,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                       Foreground="{Binding SelectedIcon.SecondaryBrush,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                       Visibility="{Binding CenteredVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                            
                            <Border Background="{Binding SelectedIcon.SurfaceBrush}" Grid.Column="1" Grid.Row="1"
                                    Visibility="{Binding SubscriptVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                    Padding="5" HorizontalAlignment="Center" VerticalAlignment="Center">

                                <TextBlock Text="{Binding SelectedIcon.SecondaryGlyph,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                           Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2"
                                           FontSize="{Binding SelectedIcon.SecondarySize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                           FontFamily="{Binding SelectedIcon.SecondaryFontFamily,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                           Foreground="{Binding SelectedIcon.SecondaryBrush,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        
                    </Border>
                </Grid>
            </Border>
        </Grid>

        <StatusBar Grid.Row="3" Style="{DynamicResource MainStatusBar}" Margin="10,0">
            <StatusBarItem>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <Core:FontIcon Grid.Column="0" Glyph="&#xE132;" Foreground="#FFFFFFFF" Style="{DynamicResource ToolbarIcon}" />
                    <Core:FontIcon Grid.Column="0" Glyph="&#xE130;" Foreground="Black" Style="{DynamicResource ToolbarIcon}" />
                    <Label Grid.Column="1" Content="{Binding SelectedIconFile.FullName,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,FallbackValue=Not set}" />
                </Grid>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock>
                    <Hyperlink TextDecorations="None" Command="{Binding OpenSettingsCommand}" ToolTip="Open settings">
                        <Grid>
                            <Core:FontIcon Grid.Column="0" Glyph="&#xF8B0;" Foreground="#FFECE7BA" Style="{DynamicResource ToolbarIcon}" />
                            <Core:FontIcon Grid.Column="0" Glyph="&#xE115;" Foreground="Black" Style="{DynamicResource ToolbarIcon}" />
                        </Grid>
                    </Hyperlink>
                </TextBlock>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
