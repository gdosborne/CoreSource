<Window x:Class="TerritoryManager.Extension.BuildTerritoriesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TerritoryManager.Extension"
        xmlns:views="clr-namespace:TerritoryManager.Extension.ViewModels"
        xmlns:mycontrols="clr-namespace:Controls.Core;assembly=Controls.Core"
        mc:Ignorable="d" Style="{DynamicResource StandardWindow}" 
        FocusManager.FocusedElement="{Binding ElementName=GroupTextBox}"
        Title="{Binding Title,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}" 
        SizeToContent="Height"  Width="700" WindowStartupLocation="Manual" ResizeMode="NoResize">
    <Window.DataContext>
        <views:BuildTerritoriesWindowViewModel />
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Border Name="TitlebarBorder" Grid.Row="0" Style="{DynamicResource CaptionBorder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <Border Background="Transparent" PreviewMouseDown="TitlebarBorder_PreviewMouseDown">
                    <TextBlock Grid.Column="0" Text="{Binding Title,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}" 
                               Style="{DynamicResource StandardWindowCaptionTextBlock}"/>
                </Border>
                <mycontrols:ControlButton Grid.Column="3" Glyph="&#xE8BB;" Command="{Binding CloseWindowCommand}"
                                        Margin="0,-1,10,0" CornerRadius="0,0,5,5" BorderThickness="1,0,1,1" />

            </Grid>
        </Border>

        <Border Grid.Row="1" Style="{DynamicResource StandardWindowBorder}" Margin="0">
            <Grid Style="{DynamicResource MainWindowGrid}" Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Style="{DynamicResource WindowHeaderText}">
                    <Run>
                        This window allows you to bulk create your territories to save time over creating them 
                        one-at-a-time. In the below box, enter the range of territories your congregation has. 
                        Separate each group or territory by a comma. If you have already defined your territories,
                        you can expand the values here. Note that if you attempt to define territories that already
                        exist, they will be ignored, so they won't be ovewritten.
                    </Run>
                </TextBlock>
                <Expander Header="Instructions" Grid.Row="1" IsExpanded="False" Margin="0">
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontWeight="Bold" FontSize="{DynamicResource LargeFontSize}" 
                                       Margin="0,10,0,10" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                    <TextBlock Style="{DynamicResource WindowHeaderText}">
                        <Run>
                            As as example, if your territories range from 1 to 125 with no breaks or other special 
                            named items, just enter 1-125 in the list. But suppose you have some territories were 
                            removed for some reason (i.e., congregation boundaries remapped) you may enter something 
                            like 1-49,55-125. This would generate territories 1-49, skip the missing territories, 
                            then resume at 55.
                        </Run>
                        <LineBreak /><LineBreak />
                        <Run>
                            Or maybe a territory had to be split into multiple territories. You could enter 
                            1-15,16A,16B,17-125. This would show that territory #16 was split into an A and a B 
                            territory. Another option is to use decimal points to signify breaking up of territories
                            into multiple territories. So the above example may be defined like this: 
                            1-15,16.1,16.2,17-125. 
                        </Run>
                        <Run FontWeight="Bold">DO NOT</Run>
                        <Run>mix split styles in your territory definitions as this would be confusing to 
                            congregation members.
                        </Run>
                        <LineBreak /><LineBreak />
                        <Run>
                            You can have as many groupings as necessary, then when you are satisified, click the 
                            Generate button below. This will give you an opportunity to view the generated list before 
                            they are saved. If the values don't look correct, make sure the values are grouped
                            appropriately.
                        </Run>
                    </TextBlock>
                </Expander>
                
                <TextBox Name="GroupTextBox" Grid.Row="2" 
                         Text="{Binding Groupings,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                         GotFocus="GroupTextBox_GotFocus"/>

                <Button Grid.Row="3" HorizontalAlignment="Right" Style="{DynamicResource StandardButton}" 
                        Content="Generate" Command="{Binding GenerateCommand}" Height="30" Margin="0,10,0,0"/>

                <TextBlock Text="If the values look correct, click OK to generate your territories"
                           Visibility="{Binding FinalMessageVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                           Grid.Row="10" HorizontalAlignment="Left" VerticalAlignment="Center"
                           Foreground="{DynamicResource GoForeground}"/>

                <StackPanel Grid.Row="10" Grid.Column="0" Grid.ColumnSpan="99" 
                            Style="{DynamicResource WindowButtonPanel}">
                    <Button Style="{DynamicResource StandardButton}" Content="OK" IsDefault="True"
                            Command="{Binding AcceptCommand}"/>
                    <Button Style="{DynamicResource StandardButton}" Content="Cancel" IsCancel="True" 
                            Command="{Binding CloseWindowCommand}"/>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Window>
