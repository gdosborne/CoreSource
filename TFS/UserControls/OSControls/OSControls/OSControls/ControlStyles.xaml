<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
                    xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit">

    <SolidColorBrush x:Key="GlyphBrush" Color="#FF36529C" />
    <SolidColorBrush x:Key="DisabledGlyphBrush" Color="#FF646C93" />
    <StreamGeometry x:Key="CheckBoxGlyph">F1M2,1L1,2 4,5 1,8 2,9 5,6 8,9 9,8 6,5 9,2 8,1 5,4 2,1</StreamGeometry>

    <ControlTemplate x:Key="CheckBoxTemplate" TargetType="{x:Type CheckBox}">
        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Grid x:Name="markGrid">
                    <Path x:Name="optionMark" Data="{DynamicResource CheckBoxGlyph}" Margin="0,0,1,1" Fill="{StaticResource GlyphBrush}" Opacity="0" Stretch="None" />
                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource GlyphBrush}" Margin="2" Opacity="0"/>
                </Grid>
            </Border>
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="True">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding" Value="4,-1,0,0"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource GlyphBrush}"/>
                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource GlyphBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource DisabledGlyphBrush}"/>
                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource DisabledGlyphBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource GlyphBrush}"/>
                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource GlyphBrush}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ControlButtonImage" TargetType="{x:Type Image}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".5" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".5" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Label}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".5" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,3" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource CheckBoxTemplate}" />
    </Style>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Padding" Value="1" />
    </Style>
    <Style TargetType="TextBlock" x:Key="SettingsHeader" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    <Style TargetType="TextBlock" x:Key="SettingsDescription" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="0,10" />
    </Style>
    <Style x:Key="MainTabTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="5,0" />
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="Width" Value="75" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="2.5,5" />
        <Setter Property="Template" Value="{DynamicResource StandardButtonBase}" />
    </Style>
    <BitmapImage x:Key="AddImage" UriSource="/OSControls;component/Themes/insert.png" />
    <BitmapImage x:Key="DeleteImage" UriSource="/OSControls;component/Themes/delete.png" />
    <BitmapImage x:Key="FileImage" UriSource="/OSControls;component/Themes/file.png" />
    <BitmapImage x:Key="FolderImage" UriSource="/OSControls;component/Themes/folder.png" />
    <LinearGradientBrush x:Key="ButtonBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" Offset="0"/>
        <GradientStop Color="#FFCDCDCD" Offset="0.15"/>
        <GradientStop Color="#FFCDCDCD" Offset="0.85"/>
        <GradientStop Color="#FF878787" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonDisabledBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" Offset="0"/>
        <GradientStop Color="#FFAEAEAE" Offset="0.15"/>
        <GradientStop Color="#FFAEAEAE" Offset="0.85"/>
        <GradientStop Color="#FF6C6C6C" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonMouseOverBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FFB7CAFF" Offset="0.15"/>
        <GradientStop Color="#FFB7CAFF" Offset="0.85"/>
        <GradientStop Color="#FFAAAAAA" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonMousePressedBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFAAAAAA" Offset="0"/>
        <GradientStop Color="#FF90ACFB" Offset="0.15"/>
        <GradientStop Color="#FF90ACFB" Offset="0.85"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>
    <ControlTemplate x:Key="StandardButtonBase" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ButtonBackground}" SnapsToDevicePixels="True" CornerRadius="2" Padding="0,0,0,2">
            <Grid>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="Button.IsCancel" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonMouseOverBackground}" />
                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonMousePressedBackground}" />
                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="{StaticResource ResourceKey=ButtonDisabledBackground}" />
                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="DataCheckBoxStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="DataTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Margin" Value="2,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="DataTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
    </Style>
</ResourceDictionary>