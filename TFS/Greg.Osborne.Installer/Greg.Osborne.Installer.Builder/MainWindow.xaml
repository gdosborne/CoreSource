<Window xmlns:Controls="clr-namespace:Greg.Osborne.Installer.Builder.Controls"  x:Class="Greg.Osborne.Installer.Builder.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Greg.Osborne.Installer.Builder"
        mc:Ignorable="d" 
        Title="Install Controller Builder" Height="450" Width="800" 
        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Icon="Icons/Setup_Icon_Blue - Copy.ico">
    <Window.DataContext>
        <local:MainWindowView />
    </Window.DataContext>
    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{Binding NewInstallationCommand}" />
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding OpenInstallationCommand}" />
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding SaveInstallationCommand}" />
        <KeyBinding Key="A" Modifiers="Ctrl" Command="{Binding SaveAsInstallationCommand}" />
        <KeyBinding Key="X" Modifiers="Ctrl" Command="{Binding ExitCommand}" />
        <KeyBinding Key="L" Modifiers="Ctrl" Command="{Binding CloseControllerCommand}" />
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="File">
                <MenuItem Header="New" InputGestureText="Ctrl-N" Command="{Binding NewInstallationCommand}" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" >
                    <MenuItem.Icon>
                        <TextBlock Text="&#xE160;" Style="{DynamicResource ControlTextBlock}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header= "Open..." InputGestureText="Ctrl-O" Command="{Binding OpenInstallationCommand}" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}">
                    <MenuItem.Icon>
                        <TextBlock Text="&#xED25;" Style="{DynamicResource ControlTextBlock}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header= "Save" InputGestureText="Ctrl-S" Command="{Binding SaveInstallationCommand}" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}">
                    <MenuItem.Icon>
                        <TextBlock Text="&#xE105;" Style="{DynamicResource ControlTextBlock}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header= "Save as..." InputGestureText="Ctrl-A" Command="{Binding SaveAsInstallationCommand}" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}">
                    <MenuItem.Icon>
                        <TextBlock Text="&#xE78C;" Style="{DynamicResource ControlTextBlock}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header= "Close" InputGestureText="Ctrl-L" Command="{Binding CloseControllerCommand}" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}">
                    <MenuItem.Icon>
                        <TextBlock Text="&#xF12B;" Style="{DynamicResource ControlTextBlock}"/>
                    </MenuItem.Icon>
                </MenuItem>                
                <Separator />
                <MenuItem Header= "Exit" InputGestureText="Ctrl-E" Command="{Binding ExitCommand}" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}">
                    <MenuItem.Icon>
                        <TextBlock Text="&#xF78A;" Style="{DynamicResource ControlTextBlock}" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
        <ToolBar Grid.Row="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
            <Button Command="{Binding NewInstallationCommand}" ToolTip="New installation controller">
                <TextBlock Text="&#xE160;" Style="{DynamicResource ControlTextBlock}"/>
            </Button>
            <Button Command="{Binding OpenInstallationCommand}" ToolTip="Open installation controller">
                <TextBlock Text="&#xED25;" Style="{DynamicResource ControlTextBlock}"/>
            </Button>
            <Separator />
            <Button Command="{Binding SaveInstallationCommand}" ToolTip="Save installation controller">
                <TextBlock Text="&#xE105;" Style="{DynamicResource ControlTextBlock}"/>
            </Button>
            <Button Command="{Binding SaveAsInstallationCommand}" ToolTip="Save installation controller as...">
                <TextBlock Text="&#xE78C;" Style="{DynamicResource ControlTextBlock}"/>
            </Button>
        </ToolBar>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Name="settingsColumn" Width="auto" MinWidth="250" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Name="sideItemsRow" MinHeight="50" />
                <RowDefinition MinHeight="50" />
            </Grid.RowDefinitions>
            <Border Name="SettingsBorder" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Padding="0" Margin="0,0,3,0" MinWidth="247" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                        <TextBlock Text="Settings" Margin="10,5,0,5" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    </Border>
                    <DataGrid Name="settingsListView" ItemsSource="{Binding Controller.Settings}" Grid.Row="1" BorderThickness="0" CanUserReorderColumns="False" CanUserResizeRows="False" AutoGenerateColumns="False" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" GridLinesVisibility="Vertical">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Name" Width="auto" MinWidth="75" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource DataGridCell}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Value" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Value,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource DataGridCell}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Path=Value,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource DataGridCellEdit}" GotFocus="GridTextBox_GotFocus" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Border>
            <GridSplitter Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Width="3" VerticalAlignment="Stretch" HorizontalAlignment="Right" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
            <Border Name="SideItemsBorder" Grid.Column="1" Grid.Row="0" Padding="0" Margin="0,0,0,3" MinHeight="47" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                        <TextBlock Text="Side Items" Margin="10,5,0,5" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    </Border>
                    <DataGrid Name="sideitemsListView" ItemsSource="{Binding Controller.SideItems}" Grid.Row="1" BorderThickness="0" CanUserReorderColumns="False" CanUserResizeRows="False" AutoGenerateColumns="False" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" GridLinesVisibility="Vertical">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="auto" MinWidth="45">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Controls:FontIcon Glyph="{Binding Image,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Style="{DynamicResource ControlTextBlock}" VerticalAlignment="Top" Margin="0,3">
                                            <Controls:FontIcon.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Select icon" Command="{Binding SelectIconCommand}" />
                                                </ContextMenu>
                                            </Controls:FontIcon.ContextMenu>
                                        </Controls:FontIcon>
                                    </DataTemplate>                                    
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Header" Width="auto" MinWidth="75">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Header,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource DataGridCell}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Path=Header,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource DataGridCellEdit}" GotFocus="GridTextBox_GotFocus" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Text" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Sample,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource DataGridCell}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Path=SideText,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource DataGridCellEdit}" AcceptsReturn="True" TextWrapping="Wrap" Height="60" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Border>
            <GridSplitter Grid.Column="1" Grid.Row="0" Height="3" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
            <Border Grid.Column="1" Grid.Row="1" Padding="0" Margin="0,0,0,0" MinHeight="47" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                        <TextBlock Text="Installation Items" Margin="10,5,0,5" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    </Border>
                    <DataGrid Name="installItemsListView" ItemsSource="{Binding Controller.InstallItems}" Grid.Row="1" BorderThickness="0" CanUserReorderColumns="False" CanUserResizeRows="False" AutoGenerateColumns="False" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" GridLinesVisibility="Vertical">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name" Width="auto" MinWidth="75" Binding="{Binding Path=Name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                            <DataGridTextColumn Header="Value" Width="75*" Binding="{Binding Path=Value,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Border>
        </Grid>
        <StatusBar Grid.Row="3" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="&#xE160;" FontFamily="Segoe MDL2 Assets" FontSize="16" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    <TextBlock Margin="5,0" Text="{Binding InstallationFileName,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock Text="&#xF127;" Foreground="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" FontFamily="Segoe MDL2 Assets" FontSize="16" Visibility="{Binding DirtyIndicatorVisibility,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
