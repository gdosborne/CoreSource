<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="Window" x:Key="SoundWindow">
        <Setter Property="Background" Value="{DynamicResource WindowBackground}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
    </Style>
    <Style TargetType="Border" x:Key="PlayingBorder">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Margin" Value="100" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Image" x:Key="ControlImage">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Source" Value="{DynamicResource PlayImage}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
                <Setter Property="Cursor" Value="Arrow" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Hyperlink">
        <Setter Property="Foreground" Value="#FF7F7FFD" />
    </Style>
    <Style TargetType="Image" x:Key="Settings">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Source" Value="{DynamicResource SettingsImage}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
                <Setter Property="Cursor" Value="Arrow" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Image" x:Key="RemoveImage">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="0,0,5,0" />
        <Setter Property="Source" Value="{DynamicResource DeleteImage}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
                <Setter Property="Cursor" Value="Arrow" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
    </Style>
    <Style TargetType="Label" x:Key="ControlLabel">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
                <Setter Property="Cursor" Value="Arrow" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Label" x:Key="PlayingLabel">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="FontSize" Value="10" />
    </Style>
    <Style TargetType="Slider">
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="Margin" Value="20,25,20,20"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="1"/>
        <Setter Property="SmallChange" Value=".01"/>
        <Setter Property="LargeChange" Value=".05" />
        <Setter Property="TickPlacement" Value="Both"/>
        <Setter Property="IsSnapToTickEnabled" Value="True" />
    </Style>
    <Style TargetType="ProgressBar" x:Key="RandomPlayingProgress">
        <Setter Property="Orientation" Value="Vertical"/>
        <!--<Setter Property="Margin" Value="20,25,20,20" />-->
        <!--<Setter Property="HorizontalAlignment" Value="Center" />-->
        <Setter Property="Minimum" Value="0" />
        <!--<Setter Property="Padding" Value="0"/>-->
        <Setter Property="Foreground" Value="{DynamicResource ProgressForeground}"/>
    </Style>
    <Style TargetType="ListBox">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="Background" Value="{DynamicResource ListBoxBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
    </Style>
    <Style TargetType="GridSplitter">
        <Setter Property="Width" Value="5" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="1,0" />
        <Setter Property="Background" Value="{DynamicResource SplitterBackground}" />
    </Style>
    <Style TargetType="TextBlock" x:Key="PlayingText">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextAlignment" Value="Center" />
    </Style>
    <ControlTemplate x:Key="ProgressBarTemplate" TargetType="{x:Type ProgressBar}">
        <Grid x:Name="TemplateRoot">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate"/>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                            </DoubleAnimationUsingKeyFrames>
                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                            </PointAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
            <Rectangle x:Name="PART_Track"/>
            <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left">
                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                    <Setter.Value>
                        <RotateTransform Angle="-90"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsIndeterminate" Value="True">
                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource ProgressForeground}" />
        <Setter Property="Template" Value="{DynamicResource ProgressBarTemplate}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0,5" />
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>
</ResourceDictionary>