<Window x:Class="InnoUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:v="clr-namespace:InnoUI"
        Loaded="Window_Loaded" Closing="Window_Closing"
        Title="MainWindow" Height="350" Width="589" MinWidth="600" MinHeight="300">
    <Window.Resources>
        <v:MainWindowView x:Key="view" PropertyChanged="MainWindowView_PropertyChanged" ExecuteUIAction="MainWindowView_ExecuteUIAction" />
    </Window.Resources>
    <Grid Name="LayoutRoot" DataContext="{Binding Source={StaticResource view}}" Focusable="True">
        <Grid.InputBindings>
            <KeyBinding Command="{Binding NewCommand}" Key="N" Modifiers="Control" />
            <KeyBinding Command="{Binding OpenCommand}" Key="O" Modifiers="Control" />
            <KeyBinding Command="{Binding CloseCommand}" Key="L" Modifiers="Control" />
            <KeyBinding Command="{Binding SaveCommand}" Key="S" Modifiers="Control" />
            <KeyBinding Command="{Binding SaveAsCommand}" Key="E" Modifiers="Control" />
        </Grid.InputBindings>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="File">
                <MenuItem Header="New" InputGestureText="Ctrl-N" Command="{Binding NewCommand}">
                    <MenuItem.Icon>
                        <Image Style="{StaticResource SmallImage}" Source="{StaticResource NewImage}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Open" InputGestureText="Ctrl-O" Command="{Binding OpenCommand}">
                    <MenuItem.Icon>
                        <Image Style="{StaticResource SmallImage}" Source="{StaticResource OpenImage}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Close" InputGestureText="Ctrl-L" Command="{Binding CloseCommand}">
                    <MenuItem.Icon>
                        <Image Style="{StaticResource SmallImage}" Source="{StaticResource CloseImage}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Save" InputGestureText="Ctrl-S" Command="{Binding SaveCommand}">
                    <MenuItem.Icon>
                        <Image Style="{StaticResource SmallImage}" Source="{StaticResource SaveImage}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save as..." InputGestureText="Ctrl-E" Command="{Binding SaveAsCommand}">
                    <MenuItem.Icon>
                        <Image Style="{StaticResource SmallImage}" Source="{StaticResource SaveAsImage}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Exit" Command="{Binding ExitCommand}" />
            </MenuItem>
            <MenuItem Header="Edit">

            </MenuItem>
            <MenuItem Header="Tools">
                <MenuItem IsCheckable="True" IsChecked="{Binding IsShowScriptChecked,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Header="Show script" />
            </MenuItem>
            <MenuItem Header="Help">

            </MenuItem>
        </Menu>
        <ToolBarTray Grid.Row="1">
            <ToolBar x:Name="toolBar">
                <Button Command="{Binding NewCommand}" ToolTip="Create new file">
                    <Image Style="{StaticResource SmallImage}" Source="{DynamicResource NewImage}" />
                </Button>
                <Button Command="{Binding OpenCommand}" ToolTip="Open existing file">
                    <Image Style="{StaticResource SmallImage}" Source="{DynamicResource OpenImage}" />
                </Button>
                <Button Command="{Binding CloseCommand}" ToolTip="Close opened file">
                    <Image Style="{StaticResource SmallImage}" Source="{DynamicResource CloseImage}" />
                </Button>
                <Separator />
                <Button Command="{Binding SaveCommand}" ToolTip="Save opened file">
                    <Image Style="{StaticResource SmallImage}" Source="{DynamicResource SaveImage}" />
                </Button>
                <Button Command="{Binding SaveAsCommand}" ToolTip="Save opened file as different name">
                    <Image Style="{StaticResource SmallImage}" Source="{DynamicResource SaveAsImage}" />
                </Button>
                <Separator />
                <CheckBox IsChecked="{Binding IsShowScriptChecked}" Content="Show Script" FontSize="10" />
            </ToolBar>
            <ToolBar Visibility="{Binding FontToolbarVisibility,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}">
                <Label Content="Font" Margin="0" VerticalAlignment="Center"/>
                <ComboBox Width="150" ItemsSource="{Binding FontFamilies,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}" SelectedItem="{Binding SelectedFontFamily,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Source}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Label Content="Size" Margin="0" VerticalAlignment="Center"/>
                <Slider Width="100" Minimum="8" Maximum="64" TickFrequency="1" IsSnapToTickEnabled="True" TickPlacement="None" Orientation="Horizontal" VerticalAlignment="Center" Value="{Binding FontSize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                <Label Content="{Binding FontSize,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}" Margin="0" VerticalAlignment="Center"/>
            </ToolBar>
        </ToolBarTray>

        <Grid Name="MiddleGrid" Grid.Row="2" Visibility="{Binding DataVisibility,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="300" />
                <ColumnDefinition MinWidth="300" />
            </Grid.ColumnDefinitions>
            <ListBox Name="ScriptBox" Padding="0" ItemsSource="{Binding File.ScriptLines,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}" PreviewMouseWheel="ScriptBox_PreviewMouseWheel" FontFamily="{Binding SelectedFontFamily,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" FontSize="{Binding FontSize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="0,-2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock VerticalAlignment="Center" Grid.Column="0" Text="{Binding Number}" TextAlignment="Right" Margin="0,0,10,0"/>
                            <Label Grid.Column="1" Content="{Binding DisplayMember}" Margin="0"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <!--<TextBox Name="ScriptBox" TextWrapping="NoWrap" Visibility="{Binding ScriptVisibility,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}" Grid.Column="0" Margin="0,0,3,0" Padding="5" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" TextChanged="ScriptBox_TextChanged" FontFamily="{Binding SelectedFontFamily,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" FontSize="{Binding FontSize,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" PreviewMouseWheel="ScriptBox_PreviewMouseWheel" AcceptsReturn="True" AcceptsTab="True" />-->
            <GridSplitter Width="3" VerticalAlignment="Stretch" HorizontalAlignment="Right" Grid.Column="0" />
            <TabControl Grid.Column="1" >
                <TabItem Header="Defines">
                    <ListBox ItemsSource="{Binding DefineLines,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,-2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock VerticalAlignment="Center" Grid.Column="0" Text="{Binding Number}" TextAlignment="Right" Margin="0,0,10,0"/>
                                    <Label Grid.Column="1" Content="{Binding DisplayMember}" Margin="0"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </TabItem>
                <TabItem Header="Setup">

                </TabItem>
                <TabItem Header="Types">

                </TabItem>
                <TabItem Header="Components">

                </TabItem>
                <TabItem Header="Tasks">

                </TabItem>
                <TabItem Header="Dirs">

                </TabItem>
                <TabItem Header="Files">

                </TabItem>
                <TabItem Header="Icons">

                </TabItem>
                <TabItem Header="INI">

                </TabItem>
                <TabItem Header="InstallDelete">

                </TabItem>
                <TabItem Header="Languages">

                </TabItem>
                <TabItem Header="Messages">

                </TabItem>
                <TabItem Header="CustomMessages">

                </TabItem>
                <TabItem Header="LangOptions">

                </TabItem>
                <TabItem Header="Registry">

                </TabItem>
                <TabItem Header="Run">

                </TabItem>
                <TabItem Header="UninstallDelete">

                </TabItem>
                <TabItem Header="UninstallRun">

                </TabItem>
                <TabItem Header="Code">

                </TabItem>
                <TabItem Header="Constant (Reference)">

                </TabItem>
            </TabControl>
        </Grid>

        <StatusBar Grid.Row="3">
            <StatusBarItem Content="{Binding File.Name,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}" Visibility="{Binding StatusNameVisibility,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}" />
            <StatusBarItem Content="{Binding File.FullPath,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}" Visibility="{Binding StatusFullNameVisibility,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}" />
            <StatusBarItem HorizontalAlignment="Right" Visibility="{Binding ChangeIndicatorVisibility,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}">
                <Grid ToolTip="{Binding DirtyIndicatorToolTip,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}">
                    <Ellipse Width="16" Height="16" Stroke="Black" StrokeThickness=".5" Fill="{Binding DirtyIndicatorBrush,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}" />
                    <Ellipse Height="10" VerticalAlignment="Top" Margin="2,1,2,0" >
                        <Ellipse.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="White" Offset="0"/>
                                <GradientStop Offset="0.582"/>
                            </LinearGradientBrush>
                        </Ellipse.Fill>
                    </Ellipse>
                </Grid>
                <!--<Image Style="{StaticResource SmallImage}" Source="{Binding ChangeImageSource,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"/>-->
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
