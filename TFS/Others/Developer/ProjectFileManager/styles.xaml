<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style
        x:Key="SeparatorLine"
        TargetType="Line">
        <Setter
            Property="X1"
            Value="5" />
        <Setter
            Property="X2"
            Value="5" />
        <Setter
            Property="Y1"
            Value="3" />
        <Setter
            Property="Y2"
            Value="19" />
        <Setter Property="Stroke">
            <Setter.Value>
                <SolidColorBrush
                    Color="{DynamicResource
                        {x:Static SystemColors.ControlDarkDarkColorKey}}" />
            </Setter.Value>
        </Setter>
        <Setter
            Property="StrokeThickness"
            Value=".75" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="Margin"
            Value="0,0,3,0" />
    </Style>
    <Style
        x:Key="SmallButton"
        TargetType="Button">
        <Setter
            Property="Width"
            Value="24" />
        <Setter
            Property="Height"
            Value="24" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="Margin"
            Value="2" />
        <Setter
            Property="Template"
            Value="{DynamicResource SmallButtonTemplate}" />
        <Setter
            Property="BorderThickness"
            Value=".75" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush
                    Color="{DynamicResource
                        {x:Static SystemColors.ActiveBorderColorKey}}" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="SmallImage"
        TargetType="{x:Type Image}">
        <Setter
            Property="Width"
            Value="16" />
        <Setter
            Property="Height"
            Value="16" />
    </Style>
    <Style
        x:Key="CanDisableImage"
        BasedOn="{StaticResource SmallImage}"
        TargetType="{x:Type Image}">
        <Style.Triggers>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Opacity"
                    Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button">
        <Setter
            Property="Width"
            Value="60" />
        <Setter
            Property="Height"
            Value="24" />
        <Setter
            Property="Margin"
            Value="2.5,5" />
        <Setter
            Property="Template"
            Value="{DynamicResource LargeButtonTemplate}" />
    </Style>
    <Style
        x:Key="ReadOnlyTextBox"
        TargetType="TextBox">
        <Setter
            Property="Background"
            Value="White" />
        <Setter
            Property="IsReadOnly"
            Value="True" />
        <Style.Triggers>
            <Trigger
                Property="IsReadOnly"
                Value="True">
                <Setter
                    Property="Background"
                    Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate
        x:Key="SmallButtonTemplate"
        TargetType="{x:Type Button}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="2"
            SnapsToDevicePixels="True">
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger
                Property="IsDefaulted"
                Value="True">
                <Setter
                    Property="BorderBrush"
                    TargetName="border"
                    Value="{DynamicResource
                        {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger
                Property="IsMouseOver"
                Value="True">
                <Setter
                    Property="Background"
                    TargetName="border"
                    Value="#FFBEE6FD" />
                <Setter
                    Property="BorderBrush"
                    TargetName="border"
                    Value="#FF3C7FB1" />
            </Trigger>
            <Trigger
                Property="IsPressed"
                Value="True">
                <Setter
                    Property="Background"
                    TargetName="border"
                    Value="#FFC4E5F6" />
                <Setter
                    Property="BorderBrush"
                    TargetName="border"
                    Value="#FF2C628B" />
            </Trigger>
            <Trigger
                Property="ToggleButton.IsChecked"
                Value="True">
                <Setter
                    Property="Background"
                    TargetName="border"
                    Value="#FFBCDDEE" />
                <Setter
                    Property="BorderBrush"
                    TargetName="border"
                    Value="#FF245A83" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Background"
                    TargetName="border"
                    Value="#FFF4F4F4" />
                <Setter
                    Property="BorderBrush"
                    TargetName="border"
                    Value="#FFADB2B5" />
                <Setter
                    Property="TextElement.Foreground"
                    TargetName="contentPresenter"
                    Value="#FF838383" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate
        x:Key="LargeButtonTemplate"
        TargetType="{x:Type Button}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="2"
            SnapsToDevicePixels="True">
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger
                Property="IsDefaulted"
                Value="True">
                <Setter
                    Property="BorderBrush"
                    TargetName="border"
                    Value="{DynamicResource
                        {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger
                Property="IsMouseOver"
                Value="True">
                <Setter
                    Property="Background"
                    TargetName="border"
                    Value="#FFBEE6FD" />
                <Setter
                    Property="BorderBrush"
                    TargetName="border"
                    Value="#FF3C7FB1" />
            </Trigger>
            <Trigger
                Property="IsPressed"
                Value="True">
                <Setter
                    Property="Background"
                    TargetName="border"
                    Value="#FFC4E5F6" />
                <Setter
                    Property="BorderBrush"
                    TargetName="border"
                    Value="#FF2C628B" />
            </Trigger>
            <Trigger
                Property="ToggleButton.IsChecked"
                Value="True">
                <Setter
                    Property="Background"
                    TargetName="border"
                    Value="#FFBCDDEE" />
                <Setter
                    Property="BorderBrush"
                    TargetName="border"
                    Value="#FF245A83" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Background"
                    TargetName="border"
                    Value="#FFF4F4F4" />
                <Setter
                    Property="BorderBrush"
                    TargetName="border"
                    Value="#FFADB2B5" />
                <Setter
                    Property="TextElement.Foreground"
                    TargetName="contentPresenter"
                    Value="#FF838383" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>